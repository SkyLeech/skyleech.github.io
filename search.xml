<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Hello World</title>
    <url>/2024/04/06/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a class="link"   href="https://hexo.io/" >Hexo <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>! 这是你的第一篇帖子。Check <a class="link"   href="https://hexo.io/docs/" >documentation <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> for more info. 如果您在使用Hexo时遇到任何问题，可以在 <a class="link"   href="https://hexo.io/docs/troubleshooting.html" >troubleshooting <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> 中找到答案。 </p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure></div>

<p>More info: <a class="link"   href="https://hexo.io/docs/writing.html" >Writing <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure></div>

<p>More info: <a class="link"   href="https://hexo.io/docs/server.html" >Server <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure></div>

<p>More info: <a class="link"   href="https://hexo.io/docs/generating.html" >Generating <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure></div>

<p>More info: <a class="link"   href="https://hexo.io/docs/one-command-deployment.html" >Deployment <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
]]></content>
  </entry>
  <entry>
    <title>JavaScript数组操作</title>
    <url>/2024/04/07/JavaScript%E6%95%B0%E7%BB%84%E6%93%8D%E4%BD%9C/</url>
    <content><![CDATA[<h2 id="声明语法"><a href="#声明语法" class="headerlink" title="声明语法"></a>声明语法</h2><div class="highlight-container" data-rel="Javascript"><figure class="iseeu highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> 数组名 = [数据<span class="number">1</span>,数据<span class="number">2</span>, ..., 数据n]</span><br><span class="line"><span class="keyword">let</span> 数组名 = <span class="keyword">new</span> <span class="title class_">Array</span>(数据<span class="number">1</span>,数据<span class="number">2</span>, ..., 数据n)</span><br></pre></td></tr></table></figure></div>

<p>数组里可以是任意类型</p>
<div class="highlight-container" data-rel="Javascript"><figure class="iseeu highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> arr = [<span class="number">114514</span>,<span class="string">&quot;hello&quot;</span>,<span class="number">2.5</span>]</span><br></pre></td></tr></table></figure></div>



<h2 id="操作数组"><a href="#操作数组" class="headerlink" title="操作数组"></a>操作数组</h2><h3 id="增："><a href="#增：" class="headerlink" title="增："></a>增：</h3><div class="highlight-container" data-rel="Javascript"><figure class="iseeu highlight javascript"><table><tr><td class="code"><pre><span class="line">arr.<span class="title function_">push</span>(新增的内容) <span class="comment">//在末尾新增</span></span><br><span class="line">arr.<span class="title function_">unshift</span>(新增的内容) <span class="comment">//在头部新增</span></span><br></pre></td></tr></table></figure></div>

<h3 id="删："><a href="#删：" class="headerlink" title="删："></a>删：</h3><div class="highlight-container" data-rel="Javascript"><figure class="iseeu highlight javascript"><table><tr><td class="code"><pre><span class="line">arr.<span class="title function_">pop</span>() <span class="comment">//方法从数组中删除最后一个元素，并返回该元素的值</span></span><br><span class="line">arr.<span class="title function_">shift</span>() <span class="comment">//删除第一个元素</span></span><br><span class="line">arr.<span class="title function_">splice</span>(操作的下标,删除的个数) <span class="comment">//删除指定元素</span></span><br></pre></td></tr></table></figure></div>

]]></content>
      <categories>
        <category>JavaScript</category>
      </categories>
      <tags>
        <tag>笔记</tag>
        <tag>JavaScript</tag>
      </tags>
  </entry>
  <entry>
    <title>MarkDown语法学习</title>
    <url>/2024/04/06/MarkDown%E8%AF%AD%E6%B3%95%E5%AD%A6%E4%B9%A0/</url>
    <content><![CDATA[<h2 id="Markdown-标题语法"><a href="#Markdown-标题语法" class="headerlink" title="Markdown 标题语法"></a>Markdown 标题语法</h2><p>要创建标题，请在单词或短语前面添加井号 (<code>#</code>) 。<code>#</code> 的数量代表了标题的级别。例如，添加三个 <code>#</code> 表示创建一个三级标题 (<code>&lt;h3&gt;</code>) (例如：<code>### My Header</code>)。</p>
<h2 id="Markdown-段落"><a href="#Markdown-段落" class="headerlink" title="Markdown 段落"></a>Markdown 段落</h2><p>要创建段落，请使用空白行将一行或多行文本进行分隔。</p>
<p>不要用空格（spaces）或制表符（ tabs）缩进段落。</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://s2.loli.net/2024/04/06/zWjIoOBgyV2tSks.png"
                      alt="image-20240406204215979"
                ></p>
<h2 id="Markdown-强调语法"><a href="#Markdown-强调语法" class="headerlink" title="Markdown 强调语法"></a>Markdown 强调语法</h2><h3 id="粗体（Bold）"><a href="#粗体（Bold）" class="headerlink" title="粗体（Bold）"></a>粗体（Bold）</h3><p>要加粗文本，请在单词或短语的前后各添加两个星号（asterisks）或下划线（underscores）。如需加粗一个单词或短语的中间部分用以表示强调的话，请在要加粗部分的两侧各添加两个星号（asterisks）。</p>
<table>
<thead>
<tr>
<th>Markdown语法</th>
<th>HTML</th>
<th>预览效果</th>
</tr>
</thead>
<tbody><tr>
<td><code>I just love **bold text**.</code></td>
<td><code>I just love &lt;strong&gt;bold text&lt;/strong&gt;.</code></td>
<td>I just love <strong>bold text</strong>.</td>
</tr>
<tr>
<td><code>I just love __bold text__.</code></td>
<td><code>I just love &lt;strong&gt;bold text&lt;/strong&gt;.</code></td>
<td>I just love <strong>bold text</strong>.</td>
</tr>
<tr>
<td><code>Love**is**bold</code></td>
<td><code>Love&lt;strong&gt;is&lt;/strong&gt;bold</code></td>
<td>Love<strong>is</strong>bold</td>
</tr>
</tbody></table>
<p><strong>加粗了</strong> <strong>这个也是</strong></p>
<p>Markdown 应用程序在如何处理单词或短语中间的下划线上并不一致。为兼容考虑，在单词或短语中间部分加粗的话，请使用星号（asterisks）。</p>
<h3 id="斜体（Italic）"><a href="#斜体（Italic）" class="headerlink" title="斜体（Italic）"></a>斜体（Italic）</h3><p>要用斜体显示文本，请在单词或短语前后添加一个星号（asterisk）或下划线（underscore）。要斜体突出单词的中间部分，请在字母前后各添加一个星号，中间不要带空格。</p>
<table>
<thead>
<tr>
<th>Markdown语法</th>
<th>HTML</th>
<th>预览效果</th>
</tr>
</thead>
<tbody><tr>
<td><code>Italicized text is the *cat&#39;s meow*.</code></td>
<td><code>Italicized text is the &lt;em&gt;cat&#39;s meow&lt;/em&gt;.</code></td>
<td>Italicized text is the <em>cat’s meow</em>.</td>
</tr>
<tr>
<td><code>Italicized text is the _cat&#39;s meow_.</code></td>
<td><code>Italicized text is the &lt;em&gt;cat&#39;s meow&lt;/em&gt;.</code></td>
<td>Italicized text is the <em>cat’s meow</em>.</td>
</tr>
<tr>
<td><code>A*cat*meow</code></td>
<td><code>A&lt;em&gt;cat&lt;/em&gt;meow</code></td>
<td>A<em>cat</em>meow</td>
</tr>
</tbody></table>
<p><em>斜体</em> <em>1</em></p>
<h2 id="粗体（Bold）和斜体（Italic）"><a href="#粗体（Bold）和斜体（Italic）" class="headerlink" title="粗体（Bold）和斜体（Italic）"></a>粗体（Bold）和斜体（Italic）</h2><p>要同时用粗体和斜体突出显示文本，请在单词或短语的前后各添加三个星号或下划线。要加粗并用斜体显示单词或短语的中间部分，请在要突出显示的部分前后各添加三个星号，中间不要带空格。</p>
<table>
<thead>
<tr>
<th>Markdown语法</th>
<th>HTML</th>
<th>预览效果</th>
</tr>
</thead>
<tbody><tr>
<td><code>This text is ***really important***.</code></td>
<td><code>This text is &lt;strong&gt;&lt;em&gt;really important&lt;/em&gt;&lt;/strong&gt;.</code></td>
<td>This text is <em><strong>really important</strong></em>.</td>
</tr>
<tr>
<td><code>This text is ___really important___.</code></td>
<td><code>This text is &lt;strong&gt;&lt;em&gt;really important&lt;/em&gt;&lt;/strong&gt;.</code></td>
<td>This text is <em><strong>really important</strong></em>.</td>
</tr>
<tr>
<td><code>This text is __*really important*__.</code></td>
<td><code>This text is &lt;strong&gt;&lt;em&gt;really important&lt;/em&gt;&lt;/strong&gt;.</code></td>
<td>This text is <em><strong>really important</strong></em>.</td>
</tr>
<tr>
<td><code>This text is **_really important_**.</code></td>
<td><code>This text is &lt;strong&gt;&lt;em&gt;really important&lt;/em&gt;&lt;/strong&gt;.</code></td>
<td>This text is <em><strong>really important</strong></em>.</td>
</tr>
<tr>
<td><code>This is really***very***important text.</code></td>
<td><code>This is really&lt;strong&gt;&lt;em&gt;very&lt;/em&gt;&lt;/strong&gt;important text.</code></td>
<td>This is really<em><strong>very</strong></em>important text.</td>
</tr>
</tbody></table>
<p><em><strong>粗体和斜体</strong></em></p>
<h2 id="Markdown-引用语法"><a href="#Markdown-引用语法" class="headerlink" title="Markdown 引用语法"></a>Markdown 引用语法</h2><p>要创建块引用，请在段落前添加一个 <code>&gt;</code> 符号。</p>
<div class="highlight-container" data-rel="Text"><figure class="iseeu highlight text"><table><tr><td class="code"><pre><span class="line">&gt; Dorothy followed her through many of the beautiful rooms in her castle.</span><br></pre></td></tr></table></figure></div>

<p>渲染效果如下所示：</p>
<blockquote>
<p>Dorothy followed her through many of the beautiful rooms in her castle.</p>
</blockquote>
<blockquote>
<p>引用</p>
<p>1</p>
<p>2</p>
<p>3</p>
</blockquote>
<h3 id="嵌套块引用"><a href="#嵌套块引用" class="headerlink" title="嵌套块引用"></a>嵌套块引用</h3><p>块引用可以嵌套。在要嵌套的段落前添加一个 <code>&gt;&gt;</code> 符号。</p>
<div class="highlight-container" data-rel="Text"><figure class="iseeu highlight text"><table><tr><td class="code"><pre><span class="line">&gt; Dorothy followed her through many of the beautiful rooms in her castle.</span><br><span class="line">&gt;</span><br><span class="line">&gt;&gt; The Witch bade her clean the pots and kettles and sweep the floor and keep the fire fed with wood.</span><br></pre></td></tr></table></figure></div>

<p>渲染效果如下：</p>
<blockquote>
<p>Dorothy followed her through many of the beautiful rooms in her castle.</p>
<blockquote>
<p>The Witch bade her clean the pots and kettles and sweep the floor and keep the fire fed with wood.</p>
</blockquote>
</blockquote>
<h3 id="带有其它元素的块引用"><a href="#带有其它元素的块引用" class="headerlink" title="带有其它元素的块引用"></a>带有其它元素的块引用</h3><p>块引用可以包含其他 Markdown 格式的元素。并非所有元素都可以使用，你需要进行实验以查看哪些元素有效。</p>
<div class="highlight-container" data-rel="Text"><figure class="iseeu highlight text"><table><tr><td class="code"><pre><span class="line">&gt; #### The quarterly results look great!</span><br><span class="line">&gt;</span><br><span class="line">&gt; - Revenue was off the chart.</span><br><span class="line">&gt; - Profits were higher than ever.</span><br><span class="line">&gt;</span><br><span class="line">&gt;  *Everything* is going according to **plan**.</span><br></pre></td></tr></table></figure></div>

<p>渲染效果如下：</p>
<blockquote>
<h4 id="The-quarterly-results-look-great"><a href="#The-quarterly-results-look-great" class="headerlink" title="The quarterly results look great!"></a>The quarterly results look great!</h4><ul>
<li>Revenue was off the chart.</li>
<li>Profits were higher than ever.</li>
</ul>
<p><em>Everything</em> is going according to <strong>plan</strong>.</p>
</blockquote>
<h2 id="Markdown-列表语法"><a href="#Markdown-列表语法" class="headerlink" title="Markdown 列表语法"></a>Markdown 列表语法</h2><p>可以将多个条目组织成有序或无序列表。</p>
<h3 id="有序列表"><a href="#有序列表" class="headerlink" title="有序列表"></a>有序列表</h3><p>要创建有序列表，请在每个列表项前添加数字并紧跟一个英文句点。数字不必按数学顺序排列，但是列表应当以数字 1 起始。</p>
<table>
<thead>
<tr>
<th>Markdown语法</th>
<th>HTML</th>
<th>预览效果</th>
</tr>
</thead>
<tbody><tr>
<td><code>1. First item2. Second item3. Third item4. Fourth item</code></td>
<td><code>&lt;ol&gt;&lt;li&gt;First item&lt;/li&gt;&lt;li&gt;Second item&lt;/li&gt;&lt;li&gt;Third item&lt;/li&gt;&lt;li&gt;Fourth item&lt;/li&gt;&lt;/ol&gt;</code></td>
<td>1. First itemSecond 2. itemThird <br />3. itemFourth item</td>
</tr>
<tr>
<td><code>1. First item1. Second item1. Third item1. Fourth item</code></td>
<td><code>&lt;ol&gt;&lt;li&gt;First item&lt;/li&gt;&lt;li&gt;Second item&lt;/li&gt;&lt;li&gt;Third item&lt;/li&gt;&lt;li&gt;Fourth item&lt;/li&gt;&lt;/ol&gt;</code></td>
<td>First itemSecond itemThird itemFourth item</td>
</tr>
<tr>
<td><code>1. First item8. Second item3. Third item5. Fourth item</code></td>
<td><code>&lt;ol&gt;&lt;li&gt;First item&lt;/li&gt;&lt;li&gt;Second item&lt;/li&gt;&lt;li&gt;Third item&lt;/li&gt;&lt;li&gt;Fourth item&lt;/li&gt;&lt;/ol&gt;</code></td>
<td>First itemSecond itemThird itemFourth item</td>
</tr>
<tr>
<td><code>1. First item2. Second item3. Third item  1. Indented item  2. Indented item4. Fourth item</code></td>
<td><code>&lt;ol&gt;&lt;li&gt;First item&lt;/li&gt;&lt;li&gt;Second item&lt;/li&gt;&lt;li&gt;Third item&lt;ol&gt;&lt;li&gt;Indented item&lt;/li&gt;&lt;li&gt;Indented item&lt;/li&gt;&lt;/ol&gt;&lt;/li&gt;&lt;li&gt;Fourth item&lt;/li&gt;&lt;/ol&gt;</code></td>
<td>First itemSecond itemThird itemIndented itemIndented itemFourth item</td>
</tr>
</tbody></table>
<ol>
<li>first</li>
<li>second</li>
<li>t<ol>
<li>sd</li>
<li>sd</li>
</ol>
</li>
</ol>
<h3 id="无序列表"><a href="#无序列表" class="headerlink" title="无序列表"></a>无序列表</h3><p>要创建无序列表，请在每个列表项前面添加破折号 (-)、星号 (*) 或加号 (+) 。缩进一个或多个列表项可创建嵌套列表。</p>
<table>
<thead>
<tr>
<th>Markdown语法</th>
<th>HTML</th>
<th>预览效果</th>
</tr>
</thead>
<tbody><tr>
<td><code>- First item- Second item- Third item- Fourth item</code></td>
<td><code>&lt;ul&gt;&lt;li&gt;First item&lt;/li&gt;&lt;li&gt;Second item&lt;/li&gt;&lt;li&gt;Third item&lt;/li&gt;&lt;li&gt;Fourth item&lt;/li&gt;&lt;/ul&gt;</code></td>
<td>- First itemSecond itemThird itemFourth item</td>
</tr>
<tr>
<td><code>* First item* Second item* Third item* Fourth item</code></td>
<td><code>&lt;ul&gt;&lt;li&gt;First item&lt;/li&gt;&lt;li&gt;Second item&lt;/li&gt;&lt;li&gt;Third item&lt;/li&gt;&lt;li&gt;Fourth item&lt;/li&gt;&lt;/ul&gt;</code></td>
<td>First itemSecond itemThird itemFourth item</td>
</tr>
<tr>
<td><code>+ First item+ Second item+ Third item+ Fourth item</code></td>
<td><code>&lt;ul&gt;&lt;li&gt;First item&lt;/li&gt;&lt;li&gt;Second item&lt;/li&gt;&lt;li&gt;Third item&lt;/li&gt;&lt;li&gt;Fourth item&lt;/li&gt;&lt;/ul&gt;</code></td>
<td>First itemSecond itemThird itemFourth item</td>
</tr>
<tr>
<td><code>- First item- Second item- Third item  - Indented item  - Indented item- Fourth item</code></td>
<td><code>&lt;ul&gt;&lt;li&gt;First item&lt;/li&gt;&lt;li&gt;Second item&lt;/li&gt;&lt;li&gt;Third item&lt;ul&gt;&lt;li&gt;Indented item&lt;/li&gt;&lt;li&gt;Indented item&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;Fourth item&lt;/li&gt;&lt;/ul&gt;</code></td>
<td>First itemSecond itemThird itemIndented itemIndented itemFourth item</td>
</tr>
</tbody></table>
<ul>
<li><p>sd</p>
</li>
<li><p>ds</p>
</li>
<li><p>asd</p>
</li>
<li><p>sd</p>
<ul>
<li>sd</li>
<li>sd</li>
</ul>
</li>
<li><p>sd</p>
</li>
</ul>
<h2 id="Markdown-代码语法"><a href="#Markdown-代码语法" class="headerlink" title="Markdown 代码语法"></a>Markdown 代码语法</h2><p>要将单词或短语表示为代码，请将其包裹在反引号 (&#96;&#96;&#96;) 中。</p>
<table>
<thead>
<tr>
<th>Markdown语法</th>
<th>HTML</th>
<th>预览效果</th>
</tr>
</thead>
<tbody><tr>
<td><code>`At the command prompt, type &#39;nano&#39;.`</code></td>
<td><code>At the command prompt, type &lt;code&gt;nano&lt;/code&gt;.</code></td>
<td>At the command prompt, type <code>nano</code>.</td>
</tr>
</tbody></table>
<h3 id="转义反引号"><a href="#转义反引号" class="headerlink" title="转义反引号"></a>转义反引号</h3><p>如果你要表示为代码的单词或短语中包含一个或多个反引号，则可以通过将单词或短语包裹在双反引号(&#96;&#96;&#96;&#96;)中。</p>
<table>
<thead>
<tr>
<th>Markdown语法</th>
<th>HTML</th>
<th>预览效果</th>
</tr>
</thead>
<tbody><tr>
<td><code>&#39;&#39;Use `code` in your Markdown file.&#39;&#39;</code></td>
<td><code>&lt;code&gt;Use </code>code<code> in your Markdown file.&lt;/code&gt;</code></td>
<td><code>Use `code` in your Markdown file.</code></td>
</tr>
</tbody></table>
<div class="highlight-container" data-rel="C++"><figure class="iseeu highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>



<h2 id="Markdown-分隔线语法"><a href="#Markdown-分隔线语法" class="headerlink" title="Markdown 分隔线语法"></a>Markdown 分隔线语法</h2><p>要创建分隔线，请在单独一行上使用三个或多个星号 (<code>***</code>)、破折号 (<code>---</code>) 或下划线 (<code>___</code>) ，并且不能包含其他内容。</p>
<div class="highlight-container" data-rel="Text"><figure class="iseeu highlight text"><table><tr><td class="code"><pre><span class="line">***</span><br><span class="line"></span><br><span class="line">---</span><br><span class="line"></span><br><span class="line">_________________</span><br></pre></td></tr></table></figure></div>

<p>以上三个分隔线的渲染效果看起来都一样</p>
<h2 id="Markdown-链接语法"><a href="#Markdown-链接语法" class="headerlink" title="Markdown 链接语法"></a>Markdown 链接语法</h2><p>链接文本放在中括号内，链接地址放在后面的括号中，链接title可选。</p>
<p>超链接Markdown语法代码：<code>[超链接显示名](超链接地址 &quot;超链接title&quot;)</code></p>
<p>对应的HTML代码：<code>&lt;a href=&quot;超链接地址&quot; title=&quot;超链接title&quot;&gt;超链接显示名&lt;/a&gt;</code></p>
<div class="highlight-container" data-rel="Text"><figure class="iseeu highlight text"><table><tr><td class="code"><pre><span class="line">这是一个链接 [Markdown语法](https://markdown.com.cn)。</span><br></pre></td></tr></table></figure></div>

<p>渲染效果如下：</p>
<p>这是一个链接 <a class="link"   href="https://markdown.com.cn/" >Markdown语法 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>。</p>
<p><a class="link"   href="https://baidu.com/" >百度一下 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<h3 id="给链接增加-Title"><a href="#给链接增加-Title" class="headerlink" title="给链接增加 Title"></a>给链接增加 Title</h3><p>链接title是当鼠标悬停在链接上时会出现的文字，这个title是可选的，它放在圆括号中链接地址后面，跟链接地址之间以空格分隔。</p>
<div class="highlight-container" data-rel="Text"><figure class="iseeu highlight text"><table><tr><td class="code"><pre><span class="line">这是一个链接 [Markdown语法](https://markdown.com.cn &quot;最好的markdown教程&quot;)。</span><br></pre></td></tr></table></figure></div>

<p>渲染效果如下：</p>
<p>这是一个链接 <a class="link"   href="https://markdown.com.cn/"  title="最好的markdown教程">Markdown语法 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>。</p>
<h3 id="网址和Email地址"><a href="#网址和Email地址" class="headerlink" title="网址和Email地址"></a>网址和Email地址</h3><p>使用尖括号可以很方便地把URL或者email地址变成可点击的链接。</p>
<div class="highlight-container" data-rel="Text"><figure class="iseeu highlight text"><table><tr><td class="code"><pre><span class="line">&lt;https://markdown.com.cn&gt;</span><br><span class="line">&lt;fake@example.com&gt;</span><br></pre></td></tr></table></figure></div>

<p>渲染效果如下：</p>
<p><a class="link"   href="https://markdown.com.cn/" >https://markdown.com.cn <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a><br><a class="link"   href="mailto:&#102;&#x61;&#x6b;&#x65;&#x40;&#x65;&#120;&#x61;&#109;&#x70;&#108;&#x65;&#x2e;&#99;&#x6f;&#x6d;" >&#102;&#x61;&#x6b;&#x65;&#x40;&#x65;&#120;&#x61;&#109;&#x70;&#108;&#x65;&#x2e;&#99;&#x6f;&#x6d; <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<h3 id="带格式化的链接"><a href="#带格式化的链接" class="headerlink" title="带格式化的链接"></a>带格式化的链接</h3><p><a class="link"   href="https://markdown.com.cn/basic-syntax/links.html#emphasis" >强调 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> 链接, 在链接语法前后增加星号。 要将链接表示为代码，请在方括号中添加反引号。</p>
<div class="highlight-container" data-rel="Text"><figure class="iseeu highlight text"><table><tr><td class="code"><pre><span class="line">I love supporting the **[EFF](https://eff.org)**.</span><br><span class="line">This is the *[Markdown Guide](https://www.markdownguide.org)*.</span><br><span class="line">See the section on [`code`](#code).</span><br></pre></td></tr></table></figure></div>

<p>渲染效果如下：</p>
<p>I love supporting the <strong><a class="link"   href="https://eff.org/" >EFF <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></strong>.<br>This is the <em><a class="link"   href="https://www.markdownguide.org/" >Markdown Guide <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></em>.<br>See the section on <a href="https://markdown.com.cn/basic-syntax/links.html#code"><code>code</code></a>.</p>
<h2 id="Markdown-图片语法"><a href="#Markdown-图片语法" class="headerlink" title="Markdown 图片语法"></a>Markdown 图片语法</h2><h3 id="链接图片"><a href="#链接图片" class="headerlink" title="链接图片"></a>链接图片</h3><p>给图片增加链接，请将图像的Markdown 括在方括号中，然后将链接添加在圆括号中。</p>
<div class="highlight-container" data-rel="Text"><figure class="iseeu highlight text"><table><tr><td class="code"><pre><span class="line">[![沙漠中的岩石图片](/assets/img/shiprock.jpg &quot;Shiprock&quot;)](https://markdown.com.cn)</span><br></pre></td></tr></table></figure></div>

<p>渲染效果如下：</p>
<p><a href="https://markdown.com.cn/"><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://markdown.com.cn/assets/img/shiprock.c3b9a023.jpg"
                      alt="沙漠中的岩石图片"
                ></a></p>
<h2 id="Markdown-任务列表语法"><a href="#Markdown-任务列表语法" class="headerlink" title="Markdown 任务列表语法"></a>Markdown 任务列表语法</h2><p>任务列表使您可以创建带有复选框的项目列表。在支持任务列表的Markdown应用程序中，复选框将显示在内容旁边。要创建任务列表，请在任务列表项之前添加破折号<code>-</code>和方括号<code>[ ]</code>，并在<code>[ ]</code>前面加上空格。要选择一个复选框，请在方括号<code>[x]</code>之间添加 x 。</p>
<div class="highlight-container" data-rel="Text"><figure class="iseeu highlight text"><table><tr><td class="code"><pre><span class="line">- [x] Write the press release</span><br><span class="line">- [ ] Update the website</span><br><span class="line">- [ ] Contact the media</span><br></pre></td></tr></table></figure></div>

<ul>
<li><input disabled="" type="checkbox"> 1</li>
<li><input checked="" disabled="" type="checkbox"> 2</li>
</ul>
]]></content>
      <categories>
        <category>MarkDown</category>
      </categories>
      <tags>
        <tag>笔记</tag>
        <tag>md</tag>
      </tags>
  </entry>
  <entry>
    <title>JavaScript函数操作</title>
    <url>/2024/04/08/JavaScript%E5%87%BD%E6%95%B0%E6%93%8D%E4%BD%9C/</url>
    <content><![CDATA[<h2 id="函数声明"><a href="#函数声明" class="headerlink" title="函数声明"></a>函数声明</h2><p>具名函数</p>
<div class="highlight-container" data-rel="Javascript"><figure class="iseeu highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> 函数名(参数列表) &#123;</span><br><span class="line">    函数体</span><br><span class="line">    <span class="keyword">return</span> 返回值</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<div class="highlight-container" data-rel="Javascript"><figure class="iseeu highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">getSum</span>(<span class="params">num1, num2</span>) &#123;</span><br><span class="line">    <span class="variable language_">document</span>.<span class="title function_">write</span>(num1 + num2)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<p>如果不传参，默认是undefined</p>
<p>undefined+undefined会出现NaN</p>
<p>形参可以给默认值</p>
<div class="highlight-container" data-rel="Javascript"><figure class="iseeu highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">getSum</span>(<span class="params">x = <span class="number">0</span>, y = <span class="number">0</span></span>)&#123;</span><br><span class="line">    <span class="variable language_">document</span>.<span class="title function_">write</span>(num1 + num2)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>



<h2 id="函数调用"><a href="#函数调用" class="headerlink" title="函数调用"></a>函数调用</h2><div class="highlight-container" data-rel="Javascript"><figure class="iseeu highlight javascript"><table><tr><td class="code"><pre><span class="line">函数名()</span><br></pre></td></tr></table></figure></div>



<h2 id="匿名函数"><a href="#匿名函数" class="headerlink" title="匿名函数"></a>匿名函数</h2><p>没有名字的函数，无法直接使用</p>
<p>使用方式：</p>
<ul>
<li>函数表达式</li>
<li>立即执行函数</li>
</ul>
<h3 id="1-函数表达式"><a href="#1-函数表达式" class="headerlink" title="1.函数表达式"></a>1.函数表达式</h3><p>将匿名函数赋值给一个变量，并且通过变量名称进行调用我们将这个称为函数表达式</p>
<p>语法：</p>
<div class="highlight-container" data-rel="Javascript"><figure class="iseeu highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> fn = <span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">    函数体</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<h3 id="2-立即执行函数"><a href="#2-立即执行函数" class="headerlink" title="2.立即执行函数"></a>2.立即执行函数</h3><div class="highlight-container" data-rel="Javascript"><figure class="iseeu highlight javascript"><table><tr><td class="code"><pre><span class="line">(<span class="keyword">function</span>(<span class="params">形参</span>)&#123;函数体&#125;)(实参); <span class="comment">//立即执行函数必须加分号</span></span><br></pre></td></tr></table></figure></div>



<h2 id="函数参数"><a href="#函数参数" class="headerlink" title="函数参数"></a>函数参数</h2><h3 id="动态参数"><a href="#动态参数" class="headerlink" title="动态参数"></a>动态参数</h3><p>arguments是函数内部内置的伪数组变量，它包含了调用函数时传入的所有实参</p>
<div class="highlight-container" data-rel="Javascript"><figure class="iseeu highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">sum</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">let</span> s = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">let</span> i = <span class="number">0</span>;i &lt; <span class="variable language_">arguments</span>.<span class="property">length</span>;i++)&#123;</span><br><span class="line">        s += <span class="variable language_">arguments</span>[i]</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> s</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>



<h3 id="剩余参数"><a href="#剩余参数" class="headerlink" title="剩余参数"></a>剩余参数</h3><p>剩余参数允许我们将一个不定数量的参数表示为一个数组</p>
<div class="highlight-container" data-rel="Javascript"><figure class="iseeu highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">getSum</span>(<span class="params">...other</span>)&#123;</span><br><span class="line">    <span class="comment">// other得到[1,2,3]</span></span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(other)</span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_">getSum</span>(<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>)</span><br></pre></td></tr></table></figure></div>



<h2 id="展开运算符"><a href="#展开运算符" class="headerlink" title="展开运算符"></a>展开运算符</h2><p>展开运算符(…)，将一个数组进行展开</p>
<div class="highlight-container" data-rel="Javascript"><figure class="iseeu highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> arr = [<span class="number">1</span>,<span class="number">5</span>,<span class="number">3</span>,<span class="number">8</span>,<span class="number">2</span>]</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(...arr) <span class="comment">// 1 5 3 8 2</span></span><br></pre></td></tr></table></figure></div>

<p>说明：</p>
<ul>
<li>不会修改原数组</li>
</ul>
<p>使用场景：</p>
<div class="highlight-container" data-rel="Javascript"><figure class="iseeu highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> arr1 = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>]</span><br><span class="line"><span class="comment">//1 求数组最大最小值</span></span><br><span class="line"><span class="title class_">Math</span>.<span class="title function_">max</span>(...arr1)</span><br><span class="line"></span><br><span class="line"><span class="comment">//2 合并数组</span></span><br><span class="line"><span class="keyword">const</span> arr2 = [<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>]</span><br><span class="line"><span class="keyword">const</span> arr = [...arr1, ...arr2]</span><br></pre></td></tr></table></figure></div>



<h2 id="箭头函数"><a href="#箭头函数" class="headerlink" title="箭头函数"></a>箭头函数</h2><p>目的：引入箭头函数的目的是更简短的函数写法并且不绑定this，箭头函数的语法比函数表达式更简洁</p>
<p>使用场景：箭头函数更适用于那些本来需要匿名函数的地方</p>
<h3 id="基本语法"><a href="#基本语法" class="headerlink" title="基本语法"></a>基本语法</h3><div class="highlight-container" data-rel="Javascript"><figure class="iseeu highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="title function_">fn</span> = (<span class="params">x</span>) =&gt; &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(x)</span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_">fn</span>(<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">//只有一个形参的时候，可以省略小括号</span></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">fn</span> = x =&gt; &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(x)</span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_">fn</span>(<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">//只有一行代码的时候，可以省略大括号</span></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">fn</span> = x =&gt; <span class="variable language_">console</span>.<span class="title function_">log</span>(x)</span><br><span class="line"><span class="title function_">fn</span>(<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">//只有一行代码的时候，可以省略return</span></span><br><span class="line"><span class="comment">/*const fn = x =&gt; &#123;</span></span><br><span class="line"><span class="comment">    return x + x</span></span><br><span class="line"><span class="comment">&#125;*/</span></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">fn</span> = x =&gt; x + x</span><br><span class="line"><span class="title function_">fn</span>(<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">//箭头函数可以直接返回一个对象(加小括号的函数体返回对象字面量表达式)</span></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">fn</span> = uname =&gt; (&#123; <span class="attr">uname</span>: uname &#125;);</span><br><span class="line"><span class="title function_">fn</span>(<span class="string">&#x27;zhangsan&#x27;</span>);</span><br></pre></td></tr></table></figure></div>

<h3 id="箭头函数参数"><a href="#箭头函数参数" class="headerlink" title="箭头函数参数"></a>箭头函数参数</h3><p>箭头函数没有arguments动态参数，但是有剩余参数…args</p>
<div class="highlight-container" data-rel="Javascript"><figure class="iseeu highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="title function_">getSum</span> = (<span class="params">...arr</span>) =&gt; &#123;</span><br><span class="line">    <span class="keyword">let</span> sum = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">let</span> i = <span class="number">0</span>;i &lt; arr.<span class="property">length</span>;i++)&#123;</span><br><span class="line">        sum += arr[i]</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> sum</span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_">getSum</span>(<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>)</span><br></pre></td></tr></table></figure></div>



<h3 id="箭头函数this"><a href="#箭头函数this" class="headerlink" title="箭头函数this"></a>箭头函数this</h3><p>以前this的指向：谁调用的这个函数，this就指向谁</p>
<p>箭头函数不会创建自己的this，它只会从自己的作用域链的上一层沿用this</p>
]]></content>
      <categories>
        <category>JavaScript</category>
      </categories>
      <tags>
        <tag>笔记</tag>
        <tag>JavaScript</tag>
      </tags>
  </entry>
  <entry>
    <title>VUE相关技术</title>
    <url>/2024/04/14/VUE%E7%9B%B8%E5%85%B3%E6%8A%80%E6%9C%AF/</url>
    <content><![CDATA[<h2 id="组件"><a href="#组件" class="headerlink" title="组件"></a>组件</h2><h3 id="三大部分"><a href="#三大部分" class="headerlink" title="三大部分"></a>三大部分</h3><ul>
<li>结构</li>
<li>样式</li>
<li>逻辑</li>
</ul>
<h3 id="样式冲突"><a href="#样式冲突" class="headerlink" title="样式冲突"></a>样式冲突</h3><p>默认情况：写在组件中的样式会全局生效→因此很容易造成多个组件之间的样式冲突问题。1.全局样式：默认组件中的样式会作用到全局</p>
<p>2.局部样式：可以给组件加上scoped属性，可以让样式只作用于当前组件</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;style scoped&gt;</span><br><span class="line">    div&#123;</span><br><span class="line">        margin: 30px;</span><br><span class="line">    &#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure></div>

<p>scoped原理：</p>
<ol>
<li><p>给当前组件模板的所有元素，都会被添加上一个自定义属性data-v-hash值</p>
<p>data-v-5f6a9d565 区分开不同的组件</p>
</li>
<li><p>css选择器后面，被自动处理，添加上了属性选择器</p>
</li>
</ol>
<h3 id="data是一个函数"><a href="#data是一个函数" class="headerlink" title="data是一个函数"></a>data是一个函数</h3><p>一个组件的data 选项必须是一个函数。→保证每个组件实例，维护独立的一份数据对象。每次创建新的组件实例，都会新执行一次data函数，得到一个新对象。</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://s2.loli.net/2024/04/14/cRi96tIVMfXNCg1.png"
                      alt="image-20240414200146044"
                ></p>
<h3 id="组件通信"><a href="#组件通信" class="headerlink" title="组件通信"></a>组件通信</h3><h4 id="什么是组件通信"><a href="#什么是组件通信" class="headerlink" title="什么是组件通信"></a>什么是组件通信</h4><p>组件通信，就是指组件与组件之间的数据传递。</p>
<ul>
<li><p>组件的数据是独立的，无法直接访问其他组件的数据</p>
</li>
<li><p>想用其他组件的数据 → 组件通信</p>
</li>
</ul>
<h4 id="组件通信解决方案"><a href="#组件通信解决方案" class="headerlink" title="组件通信解决方案"></a>组件通信解决方案</h4><p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://s2.loli.net/2024/04/14/lkfYcrUCGu64eIb.png"
                      alt="image-20240414200701752"
                ></p>
<h4 id="父子通信流程图"><a href="#父子通信流程图" class="headerlink" title="父子通信流程图"></a>父子通信流程图</h4><p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://s2.loli.net/2024/04/14/uUVdX3wmg9hZ8Tb.png"
                      alt="image-20240414200836625"
                ></p>
<h4 id="prop校验"><a href="#prop校验" class="headerlink" title="prop校验"></a>prop校验</h4><p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://s2.loli.net/2024/04/14/q8aNwydfgQr2GDs.png"
                      alt="image-20240414202234860"
                ></p>
<h4 id="prop-data、单向数据流"><a href="#prop-data、单向数据流" class="headerlink" title="prop &amp; data、单向数据流"></a>prop &amp; data、单向数据流</h4><p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://s2.loli.net/2024/04/14/fsyFvM87GJ9RiIX.png"
                      alt="image-20240414202756412"
                ></p>
]]></content>
      <categories>
        <category>vue</category>
      </categories>
      <tags>
        <tag>笔记</tag>
        <tag>vue</tag>
        <tag>前端</tag>
      </tags>
  </entry>
  <entry>
    <title>C++构造函数的一些注意事项</title>
    <url>/2024/04/23/C++%E6%9E%84%E9%80%A0%E5%87%BD%E6%95%B0%E7%9A%84%E4%B8%80%E4%BA%9B%E6%B3%A8%E6%84%8F%E4%BA%8B%E9%A1%B9/</url>
    <content><![CDATA[<h2 id="拷贝构造函数"><a href="#拷贝构造函数" class="headerlink" title="拷贝构造函数"></a>拷贝构造函数</h2><h3 id="拷贝构造函数调用时机"><a href="#拷贝构造函数调用时机" class="headerlink" title="拷贝构造函数调用时机"></a>拷贝构造函数调用时机</h3><p>C++中拷贝构造函数调用时机通常有三种情况</p>
<ul>
<li>使用一个已经创建完毕的对象来初始化一个新对象</li>
<li>值传递的方式给函数参数传值</li>
<li>以值方式返回局部对象</li>
</ul>
<h3 id="注意事项1："><a href="#注意事项1：" class="headerlink" title="注意事项1："></a>注意事项1：</h3><p>调用默认构造函数时候，不要加()</p>
<p>因为下面这行代码，编译器会认为是一个函数的声明，不会认为在创建对象</p>
<div class="highlight-container" data-rel="C++"><figure class="iseeu highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function">Person <span class="title">p1</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">func</span><span class="params">()</span></span>;</span><br></pre></td></tr></table></figure></div>

<h3 id="注意事项2："><a href="#注意事项2：" class="headerlink" title="注意事项2："></a>注意事项2：</h3><p>不要利用拷贝构造函数 初始化匿名对象    编译器会认为Person(p3) &#x3D;&#x3D;&#x3D; Person p3（对象声明）</p>
<div class="highlight-container" data-rel="C++"><figure class="iseeu highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">//显示法创建对象</span></span><br><span class="line">Person p2 = <span class="built_in">Person</span>(<span class="number">10</span>); <span class="comment">// 有参构造</span></span><br><span class="line">Person p3 = <span class="built_in">Person</span>(p2); <span class="comment">//拷贝构造</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">Person</span>(p3); <span class="comment">// 不要利用拷贝构造函数初始化匿名对象</span></span><br></pre></td></tr></table></figure></div>





<h2 id="构造函数调用规则"><a href="#构造函数调用规则" class="headerlink" title="构造函数调用规则"></a>构造函数调用规则</h2><p>默认情况下，C++编译器至少给一个类添加3个函数</p>
<ol>
<li>认构造函数（无参，函数体为空）</li>
<li>默认析构函数（无参，函数体为空）</li>
<li>默认拷贝构造函数，对属性进行值拷贝</li>
</ol>
<p>构造函数调用规则如下：</p>
<ul>
<li>如果用户定义<strong>有参</strong>构造函数，C++不在提供默认无参构造，<strong>但是会提供默认拷贝构造</strong></li>
<li>如果用户定义<strong>拷贝</strong>构造函数，<strong>C++不会再提供其他构造函数</strong></li>
</ul>
<h2 id="深拷贝与浅拷贝"><a href="#深拷贝与浅拷贝" class="headerlink" title="深拷贝与浅拷贝"></a>深拷贝与浅拷贝</h2><p>浅拷贝：简单的赋值拷贝操作</p>
<p>深拷贝：在<strong>堆区</strong>重新申请空间，进行拷贝操作</p>
<p>在类中存在指针类型时会出现的问题：</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://s2.loli.net/2024/04/24/TKfEPg4H9cjkasR.png"
                      alt="image-20240424003444756"
                ></p>
<p><strong>默认</strong>拷贝构造函数只会做<strong>浅拷贝</strong>操作，所以要利用深拷贝进行解决</p>
<div class="highlight-container" data-rel="C++"><figure class="iseeu highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="built_in">Person</span>(<span class="type">const</span> Person &amp;p)&#123;</span><br><span class="line">    m_Age = p.m_Age;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//m_Height = p.m_Height; 编译器默认实现就是这行代码</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">//深拷贝操作</span></span><br><span class="line">    m_Height = <span class="keyword">new</span> <span class="built_in">int</span> (*p.m_Height) ;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<p>当然，现在的编译器也会自动解决，不会报错</p>
<h2 id="使用初始化列表方式初始化指针类型成员变量"><a href="#使用初始化列表方式初始化指针类型成员变量" class="headerlink" title="使用初始化列表方式初始化指针类型成员变量"></a>使用初始化列表方式初始化指针类型成员变量</h2><div class="highlight-container" data-rel="C++"><figure class="iseeu highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">//new在堆区创建内存</span></span><br><span class="line"><span class="built_in">Rectangle</span>(<span class="type">double</span> width, <span class="type">int</span> len) : <span class="built_in">width</span>(width), <span class="built_in">len</span>(<span class="keyword">new</span> <span class="built_in">int</span>(len)) &#123;</span><br><span class="line">	cout &lt;&lt; <span class="string">&quot;有参构造&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

]]></content>
      <categories>
        <category>C++</category>
      </categories>
      <tags>
        <tag>笔记</tag>
        <tag>C++</tag>
        <tag>构造函数</tag>
        <tag>类和对象</tag>
        <tag>注意事项</tag>
      </tags>
  </entry>
  <entry>
    <title>Docker基础</title>
    <url>/2024/05/18/Docker%E5%9F%BA%E7%A1%80/</url>
    <content><![CDATA[<h2 id="1-Docker基础"><a href="#1-Docker基础" class="headerlink" title="1.Docker基础"></a>1.Docker基础</h2><h3 id="1-1-常见命令"><a href="#1-1-常见命令" class="headerlink" title="1.1.常见命令"></a>1.1.常见命令</h3><p>首先我们来学习Docker中的常见命令，可以参考官方文档：</p>
<p><a class="link"   href="https://docs.docker.com/engine/reference/commandline/cli/" >https://docs.docker.com/engine/reference/commandline/cli/ <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<p>Use the Docker command line<br>Docker’s CLI command description and usage</p>
<h4 id="1-1-1-命令介绍"><a href="#1-1-1-命令介绍" class="headerlink" title="1.1.1.命令介绍"></a>1.1.1.命令介绍</h4><p>其中，比较常见的命令有：</p>
<table>
<thead>
<tr>
<th>命令</th>
<th>说明</th>
<th>文档地址</th>
</tr>
</thead>
<tbody><tr>
<td>docker pull</td>
<td>拉取镜像</td>
<td><a class="link"   href="https://docs.docker.com/engine/reference/commandline/pull/" >docker pull <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></td>
</tr>
<tr>
<td>docker push</td>
<td>推送镜像到DockerRegistry</td>
<td><a class="link"   href="https://docs.docker.com/engine/reference/commandline/push/" >docker push <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></td>
</tr>
<tr>
<td>docker images</td>
<td>查看本地镜像</td>
<td><a class="link"   href="https://docs.docker.com/engine/reference/commandline/images/" >docker images <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></td>
</tr>
<tr>
<td>docker rmi</td>
<td>删除本地镜像</td>
<td><a class="link"   href="https://docs.docker.com/engine/reference/commandline/rmi/" >docker rmi <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></td>
</tr>
<tr>
<td>docker run</td>
<td>创建并运行容器（不能重复创建）</td>
<td><a class="link"   href="https://docs.docker.com/engine/reference/commandline/run/" >docker run <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></td>
</tr>
<tr>
<td>docker stop</td>
<td>停止指定容器</td>
<td><a class="link"   href="https://docs.docker.com/engine/reference/commandline/stop/" >docker stop <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></td>
</tr>
<tr>
<td>docker start</td>
<td>启动指定容器</td>
<td><a class="link"   href="https://docs.docker.com/engine/reference/commandline/start/" >docker start <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></td>
</tr>
<tr>
<td>docker restart</td>
<td>重新启动容器</td>
<td><a class="link"   href="https://docs.docker.com/engine/reference/commandline/restart/" >docker restart <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></td>
</tr>
<tr>
<td>docker rm</td>
<td>删除指定容器</td>
<td><a class="link"   href="https://docs.docker.com/engine/reference/commandline/rm/" >docs.docker.com <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></td>
</tr>
<tr>
<td>docker ps</td>
<td>查看容器</td>
<td><a class="link"   href="https://docs.docker.com/engine/reference/commandline/ps/" >docker ps <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></td>
</tr>
<tr>
<td>docker logs</td>
<td>查看容器运行日志</td>
<td><a class="link"   href="https://docs.docker.com/engine/reference/commandline/logs/" >docker logs <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></td>
</tr>
<tr>
<td>docker exec</td>
<td>进入容器</td>
<td><a class="link"   href="https://docs.docker.com/engine/reference/commandline/exec/" >docker exec <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></td>
</tr>
<tr>
<td>docker save</td>
<td>保存镜像到本地压缩文件</td>
<td><a class="link"   href="https://docs.docker.com/engine/reference/commandline/save/" >docker save <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></td>
</tr>
<tr>
<td>docker load</td>
<td>加载本地压缩文件到镜像</td>
<td><a class="link"   href="https://docs.docker.com/engine/reference/commandline/load/" >docker load <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></td>
</tr>
<tr>
<td>docker inspect</td>
<td>查看容器详细信息</td>
<td><a class="link"   href="https://docs.docker.com/engine/reference/commandline/inspect/" >docker inspect <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></td>
</tr>
</tbody></table>
<h3 id="2-2-数据卷"><a href="#2-2-数据卷" class="headerlink" title="2.2.数据卷"></a>2.2.数据卷</h3><h4 id="2-2-1-什么是数据卷"><a href="#2-2-1-什么是数据卷" class="headerlink" title="2.2.1.什么是数据卷"></a>2.2.1.什么是数据卷</h4><p><strong>数据卷（volume）</strong>是一个虚拟目录，是<strong>容器内目录</strong>与<strong>宿主机****目录</strong>之间映射的桥梁。</p>
<p>以Nginx为例，我们知道Nginx中有两个关键的目录：</p>
<ul>
<li><p>html：放置一些静态资源</p>
</li>
<li><p>conf：放置配置文件</p>
</li>
</ul>
<p>如果我们要让Nginx代理我们的静态资源，最好是放到html目录；如果我们要修改Nginx的配置，最好是找到conf下的nginx.conf文件。</p>
<p>但遗憾的是，容器运行的Nginx所有的文件都在容器内部。所以我们必须利用数据卷将两个目录与宿主机目录关联，方便我们操作。如图：</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://s2.loli.net/2024/05/18/o2tCQVIP4qlDJS6.png"
                      alt="image-20240518140210546"
                ></p>
<p>在上图中：</p>
<ul>
<li><p>我们创建了两个数据卷：conf、html</p>
</li>
<li><p>Nginx容器内部的conf目录和html目录分别与两个数据卷关联。</p>
</li>
<li><p>而数据卷conf和html分别指向了宿主机的&#x2F;var&#x2F;lib&#x2F;docker&#x2F;volumes&#x2F;conf&#x2F;_data目录和&#x2F;var&#x2F;lib&#x2F;docker&#x2F;volumes&#x2F;html&#x2F;_data目录</p>
</li>
</ul>
<p>这样以来，容器内的conf和html目录就 与宿主机的conf和html目录关联起来，我们称为<strong>挂载</strong>。此时，我们操作宿主机的&#x2F;var&#x2F;lib&#x2F;docker&#x2F;volumes&#x2F;html&#x2F;_data就是在操作容器内的&#x2F;usr&#x2F;share&#x2F;nginx&#x2F;html&#x2F;_data目录。只要我们将静态资源放入宿主机对应目录，就可以被Nginx代理了。</p>
<h4 id="1-2-2-数据卷命令"><a href="#1-2-2-数据卷命令" class="headerlink" title="1.2.2.数据卷命令"></a>1.2.2.数据卷命令</h4><p>数据卷的相关命令有：</p>
<table>
<thead>
<tr>
<th><strong>命令</strong></th>
<th><strong>说明</strong></th>
<th><strong>文档地址</strong></th>
</tr>
</thead>
<tbody><tr>
<td>docker volume create</td>
<td>创建数据卷</td>
<td><a class="link"   href="https://docs.docker.com/engine/reference/commandline/volume_create/" >docker volume create <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></td>
</tr>
<tr>
<td>docker volume ls</td>
<td>查看所有数据卷</td>
<td><a class="link"   href="https://docs.docker.com/engine/reference/commandline/volume_ls/" >docs.docker.com <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></td>
</tr>
<tr>
<td>docker volume rm</td>
<td>删除指定数据卷</td>
<td><a class="link"   href="https://docs.docker.com/engine/reference/commandline/volume_prune/" >docs.docker.com <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></td>
</tr>
<tr>
<td>docker volume inspect</td>
<td>查看某个数据卷的详情</td>
<td><a class="link"   href="https://docs.docker.com/engine/reference/commandline/volume_inspect/" >docs.docker.com <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></td>
</tr>
<tr>
<td>docker volume prune</td>
<td>清除数据卷</td>
<td><a class="link"   href="https://docs.docker.com/engine/reference/commandline/volume_prune/" >docker volume prune <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></td>
</tr>
</tbody></table>
<p>注意：容器与数据卷的挂载要在创建容器时配置，对于创建好的容器，是不能设置数据卷的。而且<strong>创建容器的过程中，数据卷会自动创建</strong>。</p>
]]></content>
      <categories>
        <category>Docker</category>
      </categories>
      <tags>
        <tag>笔记</tag>
        <tag>Docker</tag>
        <tag>Docker常用命令</tag>
        <tag>Docker数据卷</tag>
      </tags>
  </entry>
  <entry>
    <title>C++友元</title>
    <url>/2024/05/29/C++%E5%8F%8B%E5%85%83/</url>
    <content><![CDATA[<p>在程序里，有些私有属性也想让类外特殊的一些函数或者类进行访问，就需要用到友元的技术</p>
<p>友元的关键字为<code> friend</code></p>
<p>友元的三种实现</p>
<ul>
<li><p>全局函数做友元</p>
</li>
<li><p>类做友元</p>
</li>
<li><p>成员函数做友元</p>
</li>
</ul>
<h2 id="全局函数做友元"><a href="#全局函数做友元" class="headerlink" title="全局函数做友元"></a>全局函数做友元</h2><div class="highlight-container" data-rel="C++"><figure class="iseeu highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Building</span>&#123;</span><br><span class="line">    <span class="comment">//告诉编译器goodGay全局函数是Building类的好朋友，可以访问类中的私有内容</span></span><br><span class="line">    <span class="function"><span class="keyword">friend</span> <span class="type">void</span> <span class="title">goodGay</span><span class="params">(Building *building)</span></span>;</span><br><span class="line">    </span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    string m_SittingRoom;<span class="comment">//客厅</span></span><br><span class="line">    </span><br><span class="line">    <span class="built_in">Building</span>()&#123;</span><br><span class="line">        <span class="keyword">this</span>-&gt;m_SittingRoom = <span class="string">&quot;客厅&quot;</span>;</span><br><span class="line">        <span class="keyword">this</span>-&gt;m_BedRoom = <span class="string">&quot;卧室&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    string m_BedRoom;<span class="comment">//卧室</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">goodGay</span><span class="params">(Building *building)</span></span>&#123;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;好基友正在访问：&quot;</span> &lt;&lt; building-&gt;m_SittingRoom &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;好基友正在访问：&quot;</span> &lt;&lt; building-&gt;m_BedRoom &lt;&lt; endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>



<h2 id="类做友元"><a href="#类做友元" class="headerlink" title="类做友元"></a>类做友元</h2><div class="highlight-container" data-rel="C++"><figure class="iseeu highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Building</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">GoodGay</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="built_in">GoodGay</span>();</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">visit</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line">    Building *building;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Building</span> &#123;</span><br><span class="line">    <span class="comment">//GoodGay类是本类的好朋友，可以访问本类中私有成员</span></span><br><span class="line">    <span class="keyword">friend</span> <span class="keyword">class</span> <span class="title class_">GoodGay</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    string m_SittingRoom;<span class="comment">//客厅</span></span><br><span class="line"></span><br><span class="line">    <span class="built_in">Building</span>() &#123;</span><br><span class="line">        <span class="keyword">this</span>-&gt;m_SittingRoom = <span class="string">&quot;客厅&quot;</span>;</span><br><span class="line">        <span class="keyword">this</span>-&gt;m_BedRoom = <span class="string">&quot;卧室&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    string m_BedRoom;<span class="comment">//卧室</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">GoodGay::<span class="built_in">GoodGay</span>() &#123;</span><br><span class="line">    building = <span class="keyword">new</span> Building;<span class="comment">//创建建筑物对象</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">GoodGay::visit</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;好基友正在访问：&quot;</span> &lt;&lt; building-&gt;m_SittingRoom &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;好基友正在访问：&quot;</span> &lt;&lt; building-&gt;m_BedRoom &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">test01</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    GoodGay gg;</span><br><span class="line">    gg.<span class="built_in">visit</span>();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>



<h2 id="成员函数做友元"><a href="#成员函数做友元" class="headerlink" title="成员函数做友元"></a>成员函数做友元</h2>]]></content>
      <categories>
        <category>C++</category>
      </categories>
      <tags>
        <tag>笔记</tag>
        <tag>C++</tag>
        <tag>友元</tag>
      </tags>
  </entry>
  <entry>
    <title>毛中特期末复习</title>
    <url>/2024/07/02/%E6%AF%9B%E4%B8%AD%E7%89%B9%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/</url>
    <content><![CDATA[<h2 id="大纲"><a href="#大纲" class="headerlink" title="大纲"></a>大纲</h2><p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://s2.loli.net/2024/07/02/DBKJuCPFNyw5voV.png"
                      alt="image-20240702145036877"
                ></p>
<h2 id="第一讲"><a href="#第一讲" class="headerlink" title="第一讲"></a>第一讲</h2><p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://s2.loli.net/2024/07/02/JAnwyYqiaOBmZxS.png"
                      alt="image-20240702145001574"
                ></p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://s2.loli.net/2024/07/02/A7sXKRzjYD5T63I.png"
                      alt="image-20240702145728670"
                ></p>
<p>知识点三见大纲</p>
<h3 id="毛泽东思想活的灵魂"><a href="#毛泽东思想活的灵魂" class="headerlink" title="毛泽东思想活的灵魂"></a>毛泽东思想活的灵魂</h3><p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://s2.loli.net/2024/07/02/z3CABNoLGZS4Myc.png"
                      alt="image-20240702150115402"
                ></p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://s2.loli.net/2024/07/02/x2lpTycQi7sfLCH.png"
                      alt="image-20240702155604052"
                ></p>
<h2 id="第二讲"><a href="#第二讲" class="headerlink" title="第二讲"></a>第二讲</h2><p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://s2.loli.net/2024/07/02/ns5GOjwqBhVKbrz.png"
                      alt="image-20240702160947874"
                ></p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://s2.loli.net/2024/07/02/nMkC5xwKN7mHUfA.png"
                      alt="image-20240702163838424"
                ></p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://s2.loli.net/2024/07/02/JImedSg84br9E6P.png"
                      alt="image-20240702164731786"
                ></p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://s2.loli.net/2024/07/02/M9z546j1AFUpEBf.png"
                      alt="image-20240702165041579"
                ></p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://s2.loli.net/2024/07/02/dWehtsZ21GqP5Ro.png"
                      alt="image-20240702165423903"
                ></p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://s2.loli.net/2024/07/02/HPV1id2gmZDQcYG.png"
                      alt="image-20240702165715515"
                ></p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://s2.loli.net/2024/07/02/IlUKNAyQuYn9xq6.png"
                      alt="image-20240702170308071"
                ></p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://s2.loli.net/2024/07/02/1onXJYQ4cmS2klt.png"
                      alt="image-20240702171915419"
                ></p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://s2.loli.net/2024/07/02/pukX8S1cY3vjdM5.png"
                      alt="image-20240702225952135"
                ></p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://s2.loli.net/2024/07/02/Bnl5qA6JgYUvcNM.png"
                      alt="image-20240702230355898"
                ></p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://s2.loli.net/2024/07/02/vP3JohSl6Xn2MBy.png"
                      alt="image-20240702230548547"
                ></p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://s2.loli.net/2024/07/02/DbFciqxaoO1pszE.png"
                      alt="image-20240702230712012"
                ></p>
<h3 id="新民族主义革命的三大法宝"><a href="#新民族主义革命的三大法宝" class="headerlink" title="新民族主义革命的三大法宝"></a>新民族主义革命的三大法宝</h3><p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://s2.loli.net/2024/07/02/8reYsWGhx1Eyipw.png"
                      alt="image-20240702231122671"
                ></p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://s2.loli.net/2024/07/02/qvJyYOeGit1Wf8k.png"
                      alt="image-20240702231329253"
                ></p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://s2.loli.net/2024/07/02/QEsA3g2xmF4BoLY.png"
                      alt="image-20240702231612316"
                ></p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://s2.loli.net/2024/07/02/l2afJxCFWTiPNB8.png"
                      alt="image-20240702232325099"
                ></p>
<h2 id="第三讲"><a href="#第三讲" class="headerlink" title="第三讲"></a>第三讲</h2><p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://s2.loli.net/2024/07/02/gQNxsItXmk6Ud7G.png"
                      alt="image-20240702232809920"
                ></p>
<h2 id="第四讲"><a href="#第四讲" class="headerlink" title="第四讲"></a>第四讲</h2><p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://s2.loli.net/2024/07/02/xBiw4oqp95frZHn.png"
                      alt="image-20240702232938475"
                ></p>
<h2 id="第五讲"><a href="#第五讲" class="headerlink" title="第五讲"></a>第五讲</h2><p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://s2.loli.net/2024/07/02/h8N6xyDodgpWqmr.png"
                      alt="image-20240702234349496"
                ></p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://s2.loli.net/2024/07/02/brHdopc2vl6teMI.png"
                      alt="image-20240702234741867"
                ></p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://s2.loli.net/2024/07/02/wa32hlSkcZQ8MJI.png"
                      alt="image-20240702235039113"
                ></p>
<h3 id="邓小平理论的主要内容"><a href="#邓小平理论的主要内容" class="headerlink" title="邓小平理论的主要内容"></a>邓小平理论的主要内容</h3><p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://s2.loli.net/2024/07/03/no1JH8xjvVSMzta.png"
                      alt="image-20240703000258570"
                ></p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://s2.loli.net/2024/07/03/lc6Ox4UsLkXSCbg.png"
                      alt="image-20240703000758121"
                ></p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://s2.loli.net/2024/07/03/RWh4BLi32IeFqrn.png"
                      alt="image-20240703001022024"
                ></p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://s2.loli.net/2024/07/03/s8W1orJbqMBFvDY.png"
                      alt="image-20240703001147182"
                ></p>
<p>改革</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://s2.loli.net/2024/07/03/gP2DLbrhUF4pKnv.png"
                      alt="image-20240703001530343"
                ></p>
<p>开放</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://s2.loli.net/2024/07/03/TyGioRBsz6hkj8O.png"
                      alt="image-20240703001801479"
                ></p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://s2.loli.net/2024/07/03/qmOoF1iMcT27Rgr.png"
                      alt="image-20240703002035758"
                ></p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://s2.loli.net/2024/07/03/psTANbiH5B8JuUj.png"
                      alt="image-20240703002117705"
                ></p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://s2.loli.net/2024/07/03/6JdGiLjtPsnFwCm.png"
                      alt="image-20240703002220548"
                ></p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://s2.loli.net/2024/07/02/I5QeBJnpfMUoiGV.png"
                      alt="image-20240702235212967"
                ></p>
]]></content>
      <categories>
        <category>期末</category>
      </categories>
      <tags>
        <tag>期末</tag>
        <tag>毛中特</tag>
      </tags>
  </entry>
  <entry>
    <title>软件工程期末复习</title>
    <url>/2024/07/05/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/</url>
    <content><![CDATA[<h2 id="一、软件"><a href="#一、软件" class="headerlink" title="一、软件"></a>一、软件</h2><h3 id="1-1-软件与软件危机"><a href="#1-1-软件与软件危机" class="headerlink" title="1.1 软件与软件危机"></a>1.1 软件与软件危机</h3><h4 id="软件的定义和分类"><a href="#软件的定义和分类" class="headerlink" title="软件的定义和分类"></a>软件的定义和分类</h4><p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://s2.loli.net/2024/07/05/VXQLIJmn3pgqYl6.png"
                      alt="image-20240705171048678"
                ></p>
<h4 id="软件危机"><a href="#软件危机" class="headerlink" title="软件危机"></a>软件危机</h4><p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://s2.loli.net/2024/07/05/6Ur3Hj54YAozbmR.png"
                      alt="image-20240705171153373"
                ></p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://s2.loli.net/2024/07/05/dxoZEWqBrYOA7Gk.png"
                      alt="image-20240705171318188"
                ></p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://s2.loli.net/2024/07/05/HO8YujcDT51VRxz.png"
                      alt="image-20240705171420331"
                ></p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://s2.loli.net/2024/07/06/JYghTfXeaZtjW1b.png"
                      alt="image-20240706103529444"
                ></p>
<h3 id="1-2-软件工程"><a href="#1-2-软件工程" class="headerlink" title="1.2 软件工程"></a>1.2 软件工程</h3><h4 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h4><p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://s2.loli.net/2024/07/06/wtxJETgZ87yqD4B.png"
                      alt="image-20240706104041759"
                ></p>
<h4 id="软件工程基本原理"><a href="#软件工程基本原理" class="headerlink" title="软件工程基本原理"></a>软件工程基本原理</h4><p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://s2.loli.net/2024/07/06/hM84tDjWTEOvC2l.png"
                      alt="image-20240706104231812"
                ></p>
<h4 id="软件工程方法学（范型）"><a href="#软件工程方法学（范型）" class="headerlink" title="软件工程方法学（范型）"></a>软件工程方法学（范型）</h4><p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://s2.loli.net/2024/07/06/SCWe5uLjGZxnlpy.png"
                      alt="image-20240706104414595"
                ></p>
<h3 id="1-3-软件生命周期"><a href="#1-3-软件生命周期" class="headerlink" title="1.3 软件生命周期"></a>1.3 软件生命周期</h3><p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://s2.loli.net/2024/07/06/1D9vegSYJI2GbEw.png"
                      alt="image-20240706104825361"
                ></p>
<h3 id="1-4-软件开发模型"><a href="#1-4-软件开发模型" class="headerlink" title="1.4 软件开发模型"></a>1.4 软件开发模型</h3><p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://s2.loli.net/2024/07/07/iBgfc4pvV1lX2ID.png"
                      alt="image-20240707142433235"
                ></p>
<h4 id="瀑布模型"><a href="#瀑布模型" class="headerlink" title="瀑布模型"></a>瀑布模型</h4><p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://s2.loli.net/2024/07/07/ENU5Iu2oStMqfzw.png"
                      alt="image-20240707142612822"
                ></p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://s2.loli.net/2024/07/07/v9sHW2GKmnCwXNb.png"
                      alt="image-20240707202552421"
                ></p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://s2.loli.net/2024/07/07/E1JOPI8VzonZHCk.png"
                      alt="image-20240707203550430"
                ></p>
<h4 id="几种软件开发模型的主要特点"><a href="#几种软件开发模型的主要特点" class="headerlink" title="几种软件开发模型的主要特点"></a>几种软件开发模型的主要特点</h4><p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://s2.loli.net/2024/07/07/X9E5hVnBajscSvb.png"
                      alt="image-20240707203938705"
                ></p>
<h2 id="二、需求工程"><a href="#二、需求工程" class="headerlink" title="二、需求工程"></a>二、需求工程</h2><h3 id="2-1可行性研究"><a href="#2-1可行性研究" class="headerlink" title="2.1可行性研究"></a>2.1可行性研究</h3><p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://s2.loli.net/2024/07/07/DhIOAamRq5Y8d2U.png"
                      alt="image-20240707204845553"
                ></p>
<h3 id="2-2-软件需求"><a href="#2-2-软件需求" class="headerlink" title="2.2 软件需求"></a>2.2 软件需求</h3><p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://s2.loli.net/2024/07/07/AMsrgjDFCdk65iP.jpg"
                      alt="IMG_0466(20240707-205340)"
                ></p>
<h3 id="2-3-需求分析概念"><a href="#2-3-需求分析概念" class="headerlink" title="2.3 需求分析概念"></a>2.3 需求分析概念</h3><p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://s2.loli.net/2024/07/07/ZJoylrWAFbetfRS.png"
                      alt="image-20240707210028931"
                ></p>
<h2 id="三、面向对象"><a href="#三、面向对象" class="headerlink" title="三、面向对象"></a>三、面向对象</h2><h3 id="3-1-用例图"><a href="#3-1-用例图" class="headerlink" title="3.1 用例图"></a>3.1 用例图</h3><p>什么是用例图：由参与者、用例以及它们之间的关系构成的用于描述系统功能的图</p>
<p>用例模型三要素：<strong>用例</strong>、<strong>参与者</strong>以及它们之间<strong>关系</strong>所组成</p>
<p><strong>角色</strong>有4种类型：<strong>系统的使用者</strong>，<strong>硬件设备</strong>，<strong>外部系统</strong>和<strong>时间</strong></p>
<p>用例图中的<strong>关系</strong>：<strong>关联关系(角色与用例之间)、包含关系（基本用例与公共用例）、扩展关系（基本用例与特殊用例之间）、泛化关系（角色之间或用例之间）</strong></p>
<p>示例：</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://s2.loli.net/2024/07/07/rDaxKoTHmhQY4lZ.png"
                      alt="image-20240707212534133"
                ></p>
<h3 id="3-2-活动图"><a href="#3-2-活动图" class="headerlink" title="3.2 活动图"></a>3.2 活动图</h3><p>示例：</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://s2.loli.net/2024/07/07/yFb7U4ZYszPEacM.png"
                      alt="image-20240707212310197"
                ></p>
<h3 id="3-3-状态图"><a href="#3-3-状态图" class="headerlink" title="3.3 状态图"></a>3.3 状态图</h3><p>示例：</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://s2.loli.net/2024/07/07/RBIKyle3NMuisSf.png"
                      alt="image-20240707212402832"
                ></p>
<h3 id="3-4-顺序图"><a href="#3-4-顺序图" class="headerlink" title="3.4 顺序图"></a>3.4 顺序图</h3><p>顺序图由<strong>对象</strong>、<strong>生命线</strong>、<strong>激活框</strong>、<strong>消息</strong>等组成</p>
<p>示例：</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://s2.loli.net/2024/07/07/Z8oOLIgqu3bmHR9.png"
                      alt="image-20240707212455662"
                ></p>
<h3 id="3-5-类图"><a href="#3-5-类图" class="headerlink" title="3.5 类图"></a>3.5 类图</h3><p>类之间的<strong>关系</strong>：<strong>关联关系、聚合关系、组合关系、泛化关系</strong></p>
<p>示例：</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://s2.loli.net/2024/07/07/CZ4zLiwMnNPq6Op.png"
                      alt="image-20240707212619275"
                ></p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://s2.loli.net/2024/07/07/L3X48Fomi1Cujpb.png"
                      alt="image-20240707212626123"
                ></p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://s2.loli.net/2024/07/07/DelGwLdMPfqrx5m.png"
                      alt="image-20240707212648140"
                ></p>
<h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><p>面向对象模型主要由以下哪些模型组成：对象模型、动态模型、功能模型</p>
<p><strong>螺旋模型</strong>综合了<strong>瀑布模型</strong>和<strong>快速原型模型</strong>的优点，并增加了<strong>风险分析</strong>。</p>
]]></content>
      <categories>
        <category>期末</category>
      </categories>
      <tags>
        <tag>期末</tag>
        <tag>软件工程</tag>
      </tags>
  </entry>
  <entry>
    <title>SpringBoot-配置文件小知识</title>
    <url>/2024/07/21/SpringBoot-%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6%E5%B0%8F%E7%9F%A5%E8%AF%86/</url>
    <content><![CDATA[<h2 id="ConfigurationProperties"><a href="#ConfigurationProperties" class="headerlink" title="@ConfigurationProperties"></a>@ConfigurationProperties</h2><p>配置文件中<strong>key</strong>的名字必须和实体类中的<strong>属性名</strong>一致</p>
<p>实体类必须有get&#x2F;set方法，所以要加__@Data__注解</p>
<p>实体类交给ioc容器管理，加上__@Component__</p>
<p>用__@ConfigurationProperties__指定前缀</p>
<p>例：</p>
<div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@ConfigurationProperties(prefix = &quot;aliyun.oss&quot;)</span></span><br></pre></td></tr></table></figure></div>



<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://s2.loli.net/2024/07/21/JXawr4dSs1bz6eC.png"
                      alt="image-20240721213105385"
                ></p>
<h2 id="依赖（可选）"><a href="#依赖（可选）" class="headerlink" title="依赖（可选）"></a>依赖（可选）</h2><p>作用：在配置文件中会提示被@ConfigurationProperties标识的bean对象的属性名相对应的配置项的名字</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://s2.loli.net/2024/07/21/BQzIFdMr6lD4E3g.png"
                      alt="image-20240721215323749"
                ></p>
<h2 id="ConfigurationProperties与-Value"><a href="#ConfigurationProperties与-Value" class="headerlink" title="@ConfigurationProperties与@Value"></a>@ConfigurationProperties与@Value</h2><p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://s2.loli.net/2024/07/21/Lc15pDWAioeNKOr.png"
                      alt="image-20240721215818335"
                ></p>
]]></content>
      <categories>
        <category>SpringBoot</category>
      </categories>
      <tags>
        <tag>SpringBoot</tag>
        <tag>Java</tag>
        <tag>配置文件</tag>
      </tags>
  </entry>
</search>
